<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 확장자를 이용해 패턴을 걸때는 /**/*.해당 확장자 로 할 것 (Ant Pattern 규칙) -->
    <!-- 확장자가 js/css 그리고 image 폴더 밑의 여러단계에 걸친 서브 폴더와 파일들을 적용 x -->
    <http pattern="/**/*.js"  security="none"/>
    <http pattern="/**/*.css" security="none"/>
    <http pattern="/**/*.png" security="none"/>

    <!-- auto-config는 자동설정 여부 이것을 자동으로 할경우 form 인증과 클라이언트 basic인증 그리고 logout 에 대한 기본적인 셋팅이 자동으로 설정-->
    <!-- use-expressions="true"​ : spring security 의 표현식 언어 사용 여부 (각 속성의 access에 사용) -->
    <http auto-config="true" use-expressions="true">

        <!-- intercept-url : spring Security가 감시 해야할 URL과 접근 가능한 권한을 정의하는 태그 -->
        <!-- 주의 : 구체적인 pattern부터 작성해야한다. 예를들어 /** 전체 적용하는 pattern이   먼저나오면 여기서 전부 걸리지기 때문에 원하는 access접근 권한을 설정할수 없다.-->
        <intercept-url pattern="/admin/login.do"    access="isAnonymous()"/>
        <intercept-url pattern="/admin/logout.do"   access="permitAll()"/>
        <intercept-url pattern="/**"        access="permitAll()"/>


        <!-- form 방식의 로그인을 하기 위해서는 http 태그안에 form-login 태그를 넣어야 한다 -->
        <!-- custom login-page를 사용하기 위해서는 /admin/signIn URL에 접근이 가능해야한다-->
        <!-- 만약 위 intercept-url /admin/signIn 이 없다면 아래에있는 /admin/** url인데 여기는 인증받은 회원만 접근이 가능하기에 사용할수가 없다 -->
        <!-- 즉 그래서 접근 권한 access=isAnonymous() 인증받지 않은 사용자일때 true리턴 으로 들어갈수 있게 해줘야 사용 가능하다-->
        <form-login
            login-page="/admin/login.do"
            username-parameter="email"
            password-parameter="password"
            default-target-url="/admin/home.do"
            authentication-failure-url="/admin/login.do?fail=true"
        />
        <logout logout-success-url="/admin/logout"></logout>
    </http>


    <authentication-manager>
        <authentication-provider>
            <!--
            <user-service>
                <user name="admin" password="123456"   authorities="ROLE_ADMIN"/>
            </user-service>
            -->
            <password-encoder ref="passwordEncoder"/>
        </authentication-provider>
    </authentication-manager>

    <!-- 스프링 시큐리티에서 기본적을 사용하는 암호화 방식으로 암호화가 될때마다 새로운 값을 생성한다. 임의적인 값을 추가해서 암호화하지 않아도 된다. (salt 사용하지 않는다.) -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans:beans>